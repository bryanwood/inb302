//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model1", "GroupUser", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.Group), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.User))]
[assembly: EdmRelationshipAttribute("Model1", "UserFile", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UFiles.Domain.User), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.File))]
[assembly: EdmRelationshipAttribute("Model1", "FileRestriction", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UFiles.Domain.File), "Restriction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.Restriction))]
[assembly: EdmRelationshipAttribute("Model1", "FileDataFile", "FileData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UFiles.Domain.FileData), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.File))]
[assembly: EdmRelationshipAttribute("Model1", "GroupRestrictionGroup", "GroupRestriction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.GroupRestriction), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.Group))]
[assembly: EdmRelationshipAttribute("Model1", "FileFileAccessEvent", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UFiles.Domain.File), "FileAccessEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.FileAccessEvent))]
[assembly: EdmRelationshipAttribute("Model1", "UserFileAccessEvent", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UFiles.Domain.User), "FileAccessEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.FileAccessEvent))]
[assembly: EdmRelationshipAttribute("Model1", "UserUserEvent", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UFiles.Domain.User), "UserEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.UserEvent))]
[assembly: EdmRelationshipAttribute("Model1", "UserUserRestriction", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.User), "UserRestriction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.UserRestriction))]
[assembly: EdmRelationshipAttribute("Model1", "TimeRangeRestrictionTimeRange", "TimeRangeRestriction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.TimeRangeRestriction), "TimeRange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.TimeRange))]
[assembly: EdmRelationshipAttribute("Model1", "LocationRestrictionLocation", "LocationRestriction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.LocationRestriction), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.Location))]
[assembly: EdmRelationshipAttribute("Model1", "IPRestrictionIPAddress", "IPRestriction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.IPRestriction), "IPAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.IPAddress))]
[assembly: EdmRelationshipAttribute("Model1", "UserTransmittal", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.User), "Transmittal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.Transmittal))]
[assembly: EdmRelationshipAttribute("Model1", "UserTransmittal1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UFiles.Domain.User), "Transmittal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.Transmittal))]
[assembly: EdmRelationshipAttribute("Model1", "FileTransmittal", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.File), "Transmittal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.Transmittal))]
[assembly: EdmRelationshipAttribute("Model1", "TransmittalTransmittalEvent", "Transmittal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UFiles.Domain.Transmittal), "TransmittalEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UFiles.Domain.TransmittalEvent))]

#endregion

namespace UFiles.Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Model1Container object using the connection string found in the 'Model1Container' section of the application configuration file.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Restriction> Restrictions
        {
            get
            {
                if ((_Restrictions == null))
                {
                    _Restrictions = base.CreateObjectSet<Restriction>("Restrictions");
                }
                return _Restrictions;
            }
        }
        private ObjectSet<Restriction> _Restrictions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileData> FileDatas
        {
            get
            {
                if ((_FileDatas == null))
                {
                    _FileDatas = base.CreateObjectSet<FileData>("FileDatas");
                }
                return _FileDatas;
            }
        }
        private ObjectSet<FileData> _FileDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimeRange> TimeRanges
        {
            get
            {
                if ((_TimeRanges == null))
                {
                    _TimeRanges = base.CreateObjectSet<TimeRange>("TimeRanges");
                }
                return _TimeRanges;
            }
        }
        private ObjectSet<TimeRange> _TimeRanges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IPAddress> IPAddresses
        {
            get
            {
                if ((_IPAddresses == null))
                {
                    _IPAddresses = base.CreateObjectSet<IPAddress>("IPAddresses");
                }
                return _IPAddresses;
            }
        }
        private ObjectSet<IPAddress> _IPAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transmittal> Transmittals
        {
            get
            {
                if ((_Transmittals == null))
                {
                    _Transmittals = base.CreateObjectSet<Transmittal>("Transmittals");
                }
                return _Transmittals;
            }
        }
        private ObjectSet<Transmittal> _Transmittals;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Restrictions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRestrictions(Restriction restriction)
        {
            base.AddObject("Restrictions", restriction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileDatas(FileData fileData)
        {
            base.AddObject("FileDatas", fileData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimeRanges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimeRanges(TimeRange timeRange)
        {
            base.AddObject("TimeRanges", timeRange);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IPAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIPAddresses(IPAddress iPAddress)
        {
            base.AddObject("IPAddresses", iPAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transmittals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransmittals(Transmittal transmittal)
        {
            base.AddObject("Transmittals", transmittal);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(FileAccessEvent))]
    [KnownTypeAttribute(typeof(UserEvent))]
    [KnownTypeAttribute(typeof(TransmittalEvent))]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.DateTime eventDateTime)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.EventDateTime = eventDateTime;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDateTime
        {
            get
            {
                return _EventDateTime;
            }
            set
            {
                OnEventDateTimeChanging(value);
                ReportPropertyChanging("EventDateTime");
                _EventDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDateTime");
                OnEventDateTimeChanged();
            }
        }
        private global::System.DateTime _EventDateTime;
        partial void OnEventDateTimeChanging(global::System.DateTime value);
        partial void OnEventDateTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="fileId">Initial value of the FileId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdDateTime">Initial value of the CreatedDateTime property.</param>
        public static File CreateFile(global::System.Int32 fileId, global::System.String name, global::System.DateTime createdDateTime)
        {
            File file = new File();
            file.FileId = fileId;
            file.Name = name;
            file.CreatedDateTime = createdDateTime;
            return file;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                if (_FileId != value)
                {
                    OnFileIdChanging(value);
                    ReportPropertyChanging("FileId");
                    _FileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileId");
                    OnFileIdChanged();
                }
            }
        }
        private global::System.Int32 _FileId;
        partial void OnFileIdChanging(global::System.Int32 value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private global::System.DateTime _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(global::System.DateTime value);
        partial void OnCreatedDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserFile", "User")]
        public User Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserFile", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserFile", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserFile", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model1.UserFile", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FileRestriction", "Restriction")]
        public EntityCollection<Restriction> Restrictions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Restriction>("Model1.FileRestriction", "Restriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Restriction>("Model1.FileRestriction", "Restriction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FileDataFile", "FileData")]
        public FileData FileData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileData>("Model1.FileDataFile", "FileData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileData>("Model1.FileDataFile", "FileData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileData> FileDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileData>("Model1.FileDataFile", "FileData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileData>("Model1.FileDataFile", "FileData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FileFileAccessEvent", "FileAccessEvent")]
        public EntityCollection<FileAccessEvent> FileAccessEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileAccessEvent>("Model1.FileFileAccessEvent", "FileAccessEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileAccessEvent>("Model1.FileFileAccessEvent", "FileAccessEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FileTransmittal", "Transmittal")]
        public EntityCollection<Transmittal> Transmittals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transmittal>("Model1.FileTransmittal", "Transmittal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transmittal>("Model1.FileTransmittal", "Transmittal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="FileAccessEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileAccessEvent : Event
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileAccessEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        public static FileAccessEvent CreateFileAccessEvent(global::System.Int32 id, global::System.DateTime eventDateTime)
        {
            FileAccessEvent fileAccessEvent = new FileAccessEvent();
            fileAccessEvent.Id = id;
            fileAccessEvent.EventDateTime = eventDateTime;
            return fileAccessEvent;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FileFileAccessEvent", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("Model1.FileFileAccessEvent", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("Model1.FileFileAccessEvent", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("Model1.FileFileAccessEvent", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("Model1.FileFileAccessEvent", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserFileAccessEvent", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserFileAccessEvent", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserFileAccessEvent", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserFileAccessEvent", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model1.UserFileAccessEvent", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="FileData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileData object.
        /// </summary>
        /// <param name="fileDataId">Initial value of the FileDataId property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        /// <param name="hash">Initial value of the Hash property.</param>
        public static FileData CreateFileData(global::System.Int32 fileDataId, global::System.Int32 size, global::System.String extension, global::System.String hash)
        {
            FileData fileData = new FileData();
            fileData.FileDataId = fileDataId;
            fileData.Size = size;
            fileData.Extension = extension;
            fileData.Hash = hash;
            return fileData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileDataId
        {
            get
            {
                return _FileDataId;
            }
            set
            {
                if (_FileDataId != value)
                {
                    OnFileDataIdChanging(value);
                    ReportPropertyChanging("FileDataId");
                    _FileDataId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileDataId");
                    OnFileDataIdChanged();
                }
            }
        }
        private global::System.Int32 _FileDataId;
        partial void OnFileDataIdChanging(global::System.Int32 value);
        partial void OnFileDataIdChanged();
    
        /// <summary>
        /// Size of the File Data in bytes
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int32 _Size;
        partial void OnSizeChanging(global::System.Int32 value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// SHA1 Hash of the file data
        /// </summary>
        /// <LongDescription>
        /// SHA1 Hash of the file data, used to stop duplicate file data
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Hash
        {
            get
            {
                return _Hash;
            }
            set
            {
                OnHashChanging(value);
                ReportPropertyChanging("Hash");
                _Hash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Hash");
                OnHashChanged();
            }
        }
        private global::System.String _Hash;
        partial void OnHashChanging(global::System.String value);
        partial void OnHashChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FileDataFile", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("Model1.FileDataFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("Model1.FileDataFile", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.String name)
        {
            Group group = new Group();
            group.Id = id;
            group.Name = name;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "GroupUser", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Model1.GroupUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Model1.GroupUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "GroupRestrictionGroup", "GroupRestriction")]
        public EntityCollection<GroupRestriction> GroupRestrictions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupRestriction>("Model1.GroupRestrictionGroup", "GroupRestriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupRestriction>("Model1.GroupRestrictionGroup", "GroupRestriction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="GroupRestriction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupRestriction : Restriction
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupRestriction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static GroupRestriction CreateGroupRestriction(global::System.Int32 id)
        {
            GroupRestriction groupRestriction = new GroupRestriction();
            groupRestriction.Id = id;
            return groupRestriction;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "GroupRestrictionGroup", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("Model1.GroupRestrictionGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("Model1.GroupRestrictionGroup", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="IPAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IPAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IPAddress object.
        /// </summary>
        /// <param name="iPAddressId">Initial value of the IPAddressId property.</param>
        /// <param name="iP">Initial value of the IP property.</param>
        public static IPAddress CreateIPAddress(global::System.Int32 iPAddressId, global::System.String iP)
        {
            IPAddress iPAddress = new IPAddress();
            iPAddress.IPAddressId = iPAddressId;
            iPAddress.IP = iP;
            return iPAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IPAddressId
        {
            get
            {
                return _IPAddressId;
            }
            set
            {
                if (_IPAddressId != value)
                {
                    OnIPAddressIdChanging(value);
                    ReportPropertyChanging("IPAddressId");
                    _IPAddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IPAddressId");
                    OnIPAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _IPAddressId;
        partial void OnIPAddressIdChanging(global::System.Int32 value);
        partial void OnIPAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IP
        {
            get
            {
                return _IP;
            }
            set
            {
                OnIPChanging(value);
                ReportPropertyChanging("IP");
                _IP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IP");
                OnIPChanged();
            }
        }
        private global::System.String _IP;
        partial void OnIPChanging(global::System.String value);
        partial void OnIPChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "IPRestrictionIPAddress", "IPRestriction")]
        public EntityCollection<IPRestriction> IPRestriction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IPRestriction>("Model1.IPRestrictionIPAddress", "IPRestriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IPRestriction>("Model1.IPRestrictionIPAddress", "IPRestriction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="IPRestriction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IPRestriction : Restriction
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IPRestriction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static IPRestriction CreateIPRestriction(global::System.Int32 id)
        {
            IPRestriction iPRestriction = new IPRestriction();
            iPRestriction.Id = id;
            return iPRestriction;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "IPRestrictionIPAddress", "IPAddress")]
        public EntityCollection<IPAddress> IPAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IPAddress>("Model1.IPRestrictionIPAddress", "IPAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IPAddress>("Model1.IPRestrictionIPAddress", "IPAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="place">Initial value of the Place property.</param>
        public static Location CreateLocation(global::System.Int32 locationId, global::System.String place)
        {
            Location location = new Location();
            location.LocationId = locationId;
            location.Place = place;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                if (_LocationId != value)
                {
                    OnLocationIdChanging(value);
                    ReportPropertyChanging("LocationId");
                    _LocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationId");
                    OnLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "LocationRestrictionLocation", "LocationRestriction")]
        public EntityCollection<LocationRestriction> LocationRestriction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LocationRestriction>("Model1.LocationRestrictionLocation", "LocationRestriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LocationRestriction>("Model1.LocationRestrictionLocation", "LocationRestriction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="LocationRestriction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationRestriction : Restriction
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationRestriction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static LocationRestriction CreateLocationRestriction(global::System.Int32 id)
        {
            LocationRestriction locationRestriction = new LocationRestriction();
            locationRestriction.Id = id;
            return locationRestriction;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "LocationRestrictionLocation", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("Model1.LocationRestrictionLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("Model1.LocationRestrictionLocation", "Location", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Restriction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(GroupRestriction))]
    [KnownTypeAttribute(typeof(UserRestriction))]
    [KnownTypeAttribute(typeof(TimeRangeRestriction))]
    [KnownTypeAttribute(typeof(LocationRestriction))]
    [KnownTypeAttribute(typeof(IPRestriction))]
    public partial class Restriction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Restriction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Restriction CreateRestriction(global::System.Int32 id)
        {
            Restriction restriction = new Restriction();
            restriction.Id = id;
            return restriction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FileRestriction", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("Model1.FileRestriction", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("Model1.FileRestriction", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("Model1.FileRestriction", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("Model1.FileRestriction", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="TimeRange")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeRange : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimeRange object.
        /// </summary>
        /// <param name="timeRangeId">Initial value of the TimeRangeId property.</param>
        /// <param name="startDateTime">Initial value of the StartDateTime property.</param>
        /// <param name="endDateTime">Initial value of the EndDateTime property.</param>
        public static TimeRange CreateTimeRange(global::System.Int32 timeRangeId, global::System.DateTime startDateTime, global::System.DateTime endDateTime)
        {
            TimeRange timeRange = new TimeRange();
            timeRange.TimeRangeId = timeRangeId;
            timeRange.StartDateTime = startDateTime;
            timeRange.EndDateTime = endDateTime;
            return timeRange;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimeRangeId
        {
            get
            {
                return _TimeRangeId;
            }
            set
            {
                if (_TimeRangeId != value)
                {
                    OnTimeRangeIdChanging(value);
                    ReportPropertyChanging("TimeRangeId");
                    _TimeRangeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimeRangeId");
                    OnTimeRangeIdChanged();
                }
            }
        }
        private global::System.Int32 _TimeRangeId;
        partial void OnTimeRangeIdChanging(global::System.Int32 value);
        partial void OnTimeRangeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private global::System.DateTime _EndDateTime;
        partial void OnEndDateTimeChanging(global::System.DateTime value);
        partial void OnEndDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TimeRangeRestrictionTimeRange", "TimeRangeRestriction")]
        public EntityCollection<TimeRangeRestriction> TimeRangeRestriction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeRangeRestriction>("Model1.TimeRangeRestrictionTimeRange", "TimeRangeRestriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeRangeRestriction>("Model1.TimeRangeRestrictionTimeRange", "TimeRangeRestriction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="TimeRangeRestriction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeRangeRestriction : Restriction
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimeRangeRestriction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static TimeRangeRestriction CreateTimeRangeRestriction(global::System.Int32 id)
        {
            TimeRangeRestriction timeRangeRestriction = new TimeRangeRestriction();
            timeRangeRestriction.Id = id;
            return timeRangeRestriction;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TimeRangeRestrictionTimeRange", "TimeRange")]
        public EntityCollection<TimeRange> TimeRanges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeRange>("Model1.TimeRangeRestrictionTimeRange", "TimeRange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeRange>("Model1.TimeRangeRestrictionTimeRange", "TimeRange", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Transmittal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transmittal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transmittal object.
        /// </summary>
        /// <param name="transmittalId">Initial value of the TransmittalId property.</param>
        public static Transmittal CreateTransmittal(global::System.Int32 transmittalId)
        {
            Transmittal transmittal = new Transmittal();
            transmittal.TransmittalId = transmittalId;
            return transmittal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransmittalId
        {
            get
            {
                return _TransmittalId;
            }
            set
            {
                if (_TransmittalId != value)
                {
                    OnTransmittalIdChanging(value);
                    ReportPropertyChanging("TransmittalId");
                    _TransmittalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransmittalId");
                    OnTransmittalIdChanged();
                }
            }
        }
        private global::System.Int32 _TransmittalId;
        partial void OnTransmittalIdChanging(global::System.Int32 value);
        partial void OnTransmittalIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserTransmittal", "User")]
        public EntityCollection<User> Recipients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Model1.UserTransmittal", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Model1.UserTransmittal", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserTransmittal1", "User")]
        public User Sender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserTransmittal1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserTransmittal1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserTransmittal1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model1.UserTransmittal1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FileTransmittal", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("Model1.FileTransmittal", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("Model1.FileTransmittal", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TransmittalTransmittalEvent", "TransmittalEvent")]
        public EntityCollection<TransmittalEvent> TransmittalEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransmittalEvent>("Model1.TransmittalTransmittalEvent", "TransmittalEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransmittalEvent>("Model1.TransmittalTransmittalEvent", "TransmittalEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="TransmittalEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransmittalEvent : Event
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransmittalEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        public static TransmittalEvent CreateTransmittalEvent(global::System.Int32 id, global::System.DateTime eventDateTime)
        {
            TransmittalEvent transmittalEvent = new TransmittalEvent();
            transmittalEvent.Id = id;
            transmittalEvent.EventDateTime = eventDateTime;
            return transmittalEvent;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TransmittalTransmittalEvent", "Transmittal")]
        public Transmittal Transmittal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transmittal>("Model1.TransmittalTransmittalEvent", "Transmittal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transmittal>("Model1.TransmittalTransmittalEvent", "Transmittal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transmittal> TransmittalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transmittal>("Model1.TransmittalTransmittalEvent", "Transmittal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transmittal>("Model1.TransmittalTransmittalEvent", "Transmittal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="verificationString">Initial value of the VerificationString property.</param>
        /// <param name="verified">Initial value of the Verified property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String displayName, global::System.String email, global::System.String passwordHash, global::System.String verificationString, global::System.Boolean verified)
        {
            User user = new User();
            user.Id = id;
            user.DisplayName = displayName;
            user.Email = email;
            user.PasswordHash = passwordHash;
            user.VerificationString = verificationString;
            user.Verified = verified;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VerificationString
        {
            get
            {
                return _VerificationString;
            }
            set
            {
                OnVerificationStringChanging(value);
                ReportPropertyChanging("VerificationString");
                _VerificationString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VerificationString");
                OnVerificationStringChanged();
            }
        }
        private global::System.String _VerificationString;
        partial void OnVerificationStringChanging(global::System.String value);
        partial void OnVerificationStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Verified
        {
            get
            {
                return _Verified;
            }
            set
            {
                OnVerifiedChanging(value);
                ReportPropertyChanging("Verified");
                _Verified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Verified");
                OnVerifiedChanged();
            }
        }
        private global::System.Boolean _Verified;
        partial void OnVerifiedChanging(global::System.Boolean value);
        partial void OnVerifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "GroupUser", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("Model1.GroupUser", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("Model1.GroupUser", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserFile", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("Model1.UserFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("Model1.UserFile", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserFileAccessEvent", "FileAccessEvent")]
        public EntityCollection<FileAccessEvent> FileAccessEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileAccessEvent>("Model1.UserFileAccessEvent", "FileAccessEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileAccessEvent>("Model1.UserFileAccessEvent", "FileAccessEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserUserEvent", "UserEvent")]
        public EntityCollection<UserEvent> UserEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEvent>("Model1.UserUserEvent", "UserEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEvent>("Model1.UserUserEvent", "UserEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserUserRestriction", "UserRestriction")]
        public EntityCollection<UserRestriction> UserRestrictions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRestriction>("Model1.UserUserRestriction", "UserRestriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRestriction>("Model1.UserUserRestriction", "UserRestriction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserTransmittal", "Transmittal")]
        public EntityCollection<Transmittal> ReceivedTransmittals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transmittal>("Model1.UserTransmittal", "Transmittal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transmittal>("Model1.UserTransmittal", "Transmittal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserTransmittal1", "Transmittal")]
        public EntityCollection<Transmittal> SentTransmittals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transmittal>("Model1.UserTransmittal1", "Transmittal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transmittal>("Model1.UserTransmittal1", "Transmittal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="UserEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEvent : Event
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        public static UserEvent CreateUserEvent(global::System.Int32 id, global::System.DateTime eventDateTime)
        {
            UserEvent userEvent = new UserEvent();
            userEvent.Id = id;
            userEvent.EventDateTime = eventDateTime;
            return userEvent;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserUserEvent", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserUserEvent", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserUserEvent", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserUserEvent", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model1.UserUserEvent", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="UserRestriction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRestriction : Restriction
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRestriction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static UserRestriction CreateUserRestriction(global::System.Int32 id)
        {
            UserRestriction userRestriction = new UserRestriction();
            userRestriction.Id = id;
            return userRestriction;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserUserRestriction", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Model1.UserUserRestriction", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Model1.UserUserRestriction", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
